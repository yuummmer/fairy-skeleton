name: Cross-platform Smoke

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  smoke:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11"]   # match your Quickstart; add 3.12 later if you like
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package + deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install jsonschema pandas

      # Minimal end-to-end: read bad.csv, run process_csv, write report.json,
      # validate report.json against schemas/report_v0.schema.json
      - name: Smoke: validate & write report
        shell: bash
        run: |
          python - <<'PY'
          from pathlib import Path
          import json, sys
          from jsonschema import validate
          from fairy.validation.process_csv import process_csv
          from fairy.core.services.report_writer import write_report

          repo = Path(".").resolve()
          csv  = repo/"tests"/"test.csv"
          if not csv.exists():
              print(f"❌ Missing {csv}", file=sys.stderr); sys.exit(2)

          meta, _ = process_csv(str(csv))
          out_dir = repo/"project_dir"/"out"
          out = write_report(
              out_dir,
              filename=csv.name,
              sha256=meta.get("sha256","0"*64),
              meta={
                  "n_rows": meta.get("n_rows", 0),
                  "n_cols": meta.get("n_cols", 0),
                  "fields_validated": meta.get("fields_validated", []),
                  "warnings": meta.get("warnings", []),
              },
              rulepacks=[],
              provenance={"license": None, "source_url": None, "notes": None},
              input_path=str(csv),
          )

          schema = json.loads((repo/"schemas"/"report_v0.schema.json").read_text(encoding="utf-8"))
          data   = json.loads(Path(out).read_text(encoding="utf-8"))
          validate(instance=data, schema=schema)
          print(f"✅ Cross-OS smoke OK on {sys.platform}. Wrote: {out}")
          PY

      # (Optional) also run unit tests on each OS
      - name: Pytest
        run: pytest -q
